/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export function getVersion(): Array;
export function resolveDID(a: number, b: number, c: number, d: number): number;
export function generateEd25519Key(): Array;
export function keyToDID(a: number, b: number, c: number, d: number): Array;
export function pubkeyToDID(a: number, b: number, c: number, d: number): Array;
export function didToVerificationMethod(a: number, b: number): number;
export function keyToVerificationMethod(a: number, b: number, c: number, d: number): number;
export function getKeyId(a: number, b: number, c: number, d: number): Array;
export function generateCredentialDataToSign(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): Array;
export function finalizeCredential(a: number, b: number, c: number, d: number): Array;
export function issueCredential(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function prepareIssueCredential(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function completeIssueCredential(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function verifyCredential(a: number, b: number, c: number, d: number): number;
export function issuePresentation(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function prepareIssuePresentation(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function completeIssuePresentation(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function verifyPresentation(a: number, b: number, c: number, d: number): number;
export function DIDAuth(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function JWKFromTezos(a: number, b: number): number;
export function delegateCapability(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function prepareDelegateCapability(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function completeDelegateCapability(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function verifyDelegation(a: number, b: number): number;
export function invokeCapability(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function prepareInvokeCapability(a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number): number;
export function completeInvokeCapability(a: number, b: number, c: number, d: number, e: number, f: number): number;
export function verifyInvocationSignature(a: number, b: number): number;
export function verifyInvocation(a: number, b: number, c: number, d: number): number;
export function didkit_error_message(): number;
export function didkit_error_code(): number;
export function __wbindgen_malloc(a: number, b: number): number;
export function __wbindgen_realloc(a: number, b: number, c: number, d: number): number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_export_3: WebAssembly.Table;
export function closure2987_externref_shim(a: number, b: number, c: number): void;
export function __wbindgen_free(a: number, b: number, c: number): void;
export function __externref_table_dealloc(a: number): void;
export function __wbindgen_exn_store(a: number): void;
export function __externref_table_alloc(): number;
export function closure3355_externref_shim(a: number, b: number, c: number, d: number): void;
export function __wbindgen_start(): void;
